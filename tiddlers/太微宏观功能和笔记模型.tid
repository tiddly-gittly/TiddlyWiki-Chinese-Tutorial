created: 20250612012611940
creator: 马不前
modified: 20250612012747008
modifier: 马不前
tags: 他们是这样评价太微的
title: 太微宏观功能和笔记模型

元素微件`<$name>`，双尖括号<<name>>是两类基本的WikiText调用方式。在函数及筛选器中会有自己独特的变量使用方式。

第零序列是微件（widget），包含微件、自定义微件、微件消息、核心变量、$set $let $vars变量微件。主要负责构建UI界面，类似Vue或React，是构建Wiki组件及Wiki的核心。有wikitext和js两种用法，状态管理是其中核心，qualify限定微件是常用的状态管理微件；相关的还有 tiddlywiki Cascade级联，CSS（Cascading Style Sheet）。级联（Cascades）是用于构建和自定义 TiddlyWiki 用户界面的关键机制。

第一序列是函数（包含筛选器），主要负责数据输出，有wikitext和js两种用法。函数和筛选器类似编程语言的函数运算，从一个输入运用某个筛选器计算得到结果，传递给下一步筛选器，这样一步步的得到计算结果。Wiki的函数及筛选器就等价于编程语言的函数定义和函数定义好的基础函数。

第二序列为进程（包含宏、JS宏），主要负责tiddlywiki方法，一些过程性的处理，仅有wikitext一种使用方法；

第三序列为模块，指通用JS模块。主要负责作为微件、JS宏的依赖使用。四个序列的底层实现均基于此通用JS模块。

tiddlywiki的笔记模型，可以想象成一个Excel表格，表格中的每一行都代表tiddlywiki的一个条目。每一个条目都有自己的字段，这些字段就相当于Excel表格的每一列，字段的字段名相当于表格的表头定义。可以想象，tiddlywiki是一张无限多条目记录的表格。该表格中比较特殊的字段列是title、tag、type、text等字段。其中text字段是条目的核心字段，它关联了解析器模式用于展示笔记或编程内容。

由上述笔记模型可以进而理解范本条目（模版）：就是在条目中使用嵌入语法，嵌入某个条目的某个字段列。如：你可以新建名为A范本的条目，在条目中写下{{!!title}} 类似Excel的单元格引用的条目中某个字段的文本引用，此文本引用类似一个Excel单元格地址指向具体内容。然后你可以新建B普通条目，在条目中写下 {{||A范本}}，这样就会将B普通条目的全部字段传递给A范本。A范本中的文本引用会自动填充为B普通条目字段内容，最后将A范本填充好的内容嵌入到B普通条目中。
