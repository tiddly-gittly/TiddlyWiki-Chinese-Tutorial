{"tiddlers":{"$:/config/markdown/admonition/style":{"title":"$:/config/markdown/admonition/style","text":"classic"},"$:/config/markdown/toc/portrait":{"title":"$:/config/markdown/toc/portrait","text":"hide"},"$:/config/markdown/toc/depth":{"title":"$:/config/markdown/toc/depth","text":"2"},"$:/config/markdown/toc/enable":{"title":"$:/config/markdown/toc/enable","text":"yes"},"$:/plugins/cdr/markdown-more/markdown-it-admonition.js":{"title":"$:/plugins/cdr/markdown-more/markdown-it-admonition.js","text":"/*\\\ntitle: $:/plugins/cdr/markdown-more/markdown-it-admonition.js\ntype: application/javascript\nmodule-type: library\n\nAdds admonition container:\n\n:::category optional title string\nadmonition body\n:::\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar categories = {\n\tnote: null,\n\tinfo: null,\n\ttodo: null,\n\timportant: null,\n\ttip: null,\n\tsuccess: null,\n\tquestion: null,\n\twarning: null,\n\tcaution: null,\n\tfail: null,\n\tdanger: null,\n\terror: null,\n\tbug: null,\n\texample: null,\n\tsnippet: null,\n\tabstract: null,\n\tsummary: null,\n\tquote: null,\n\tcite: null,\n\t\"see-also\": \"SEE ALSO\"\n};\n\n// initialize default title string\nfor(var c in categories) {\n\tif(!categories[c]) {\n\t\tcategories[c] = c.toUpperCase();\n\t}\n};\n\nvar AdmMarkerCode;\n\nvar AdmHeadingRegEx = /^\\s*([a-zA-Z-]+[a-zA-Z])([-+]?)(?:\\s*$|\\s+(.*?)\\s*$)/;\nfunction parseHeading(text) {\n\tvar m = text.match(AdmHeadingRegEx);\n\tif(m) {\n\t\tvar cat = m[1].toLowerCase();\n\t\tif(categories.hasOwnProperty(cat)) {\n\t\t\treturn {\n\t\t\t\tcategory: cat,\n\t\t\t\tstate: (m[2] || null),\n\t\t\t\ttitle: (m[3] || categories[cat])\n\t\t\t};\n\t\t}\n\t}\n\treturn null;\n}\n\n// parse through source from startLine until endLine or markup string\nfunction reachBlockEnd(state,startLine,endLine,markup) {\n\tvar nextLine=startLine;\n\tvar pos, mem, max, haveEndMarker=false;\n\n\tfor(nextLine = startLine; nextLine < endLine; nextLine++) {\n\t\tpos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n\t\tmax = state.eMarks[nextLine];\n\n\t\tif(pos < max && state.sCount[nextLine] < state.blkIndent) {\n\t\t\t// non-empty line with negative indent should stop the list:\n\t\t\t// - ```\n\t\t\t//  test\n\t\t\tbreak;\n\t\t}\n\n\t\tif(state.src.charCodeAt(pos) !== AdmMarkerCode) { continue; }\n\n\t\tif(state.sCount[nextLine] - state.blkIndent >= 4) {\n\t\t\t// closing fence should be indented less than 4 spaces\n\t\t\tcontinue;\n\t\t}\n\n\t\tpos = state.skipChars(pos,AdmMarkerCode);\n\n\t\t// closing code fence must be at least as long as the opening one\n\t\tif(pos - mem < markup.length) { continue; }\n\n\t\t// make sure tail has spaces only\n\t\tif(state.skipSpaces(pos) < max) { continue; }\n\n\t\t// found!\n\t\thaveEndMarker = true;\n\t\tbreak;\n\t}\n\n\tif(haveEndMarker) {\n\t\tnextLine++;\n\t}\n\n\treturn { endLine: nextLine, endMarker: (haveEndMarker ? state.src.slice(mem,pos) : \"\") };\n}\n\nmodule.exports = function admonitionPlugin(md,options) {\n\tfunction admonitionRule(state,startLine,endLine,silent) {\n\t\tvar pos, params, token, markup,\n\t\tstart = state.bMarks[startLine] + state.tShift[startLine],\n\t\tmax = state.eMarks[startLine];\n\n\t\tif(start + 3 > max) { return false; }\n\n\t\tif(state.src.charCodeAt(start) !== AdmMarkerCode) {\n\t\t  return false;\n\t\t}\n\n\t\t// scan marker length, must be >= 3\n\t\tpos = state.skipChars(start,AdmMarkerCode);\n\n\t\tif(pos - start < 3) { return false; }\n\n\t\tmarkup = state.src.slice(start,pos);\n\t\tparams = state.src.slice(pos,max);\n\n\t\t// parse heading\n\t\tvar heading = parseHeading(params);\n\t\tif(!heading) { return false; }\n\n\t\t// Since start is found, we can report success here in validation mode\n\t\tif(silent) { return true; }\n\n\t\tvar loop = reachBlockEnd(state,startLine + 1,endLine,markup);\n\t\tvar oldParent = state.parentType;\n\t\tvar oldLineMax = state.lineMax;\n\t\tstate.parentType = 'admonition';\n\n\t\tvar blockTag = heading.state ? 'details' : 'div';\n\t\tvar titleTag = heading.state ? 'summary' : 'div';\n\n\t\ttoken = state.push('admonition_open',blockTag,1);\n\t\ttoken.markup = markup;\n\t\ttoken.block  = true;\n\t\ttoken.info   = heading.category;\n\t\ttoken.map    = [ startLine, loop.endLine ];\n\t\ttoken.attrJoin('class','admonition');\n\t\ttoken.attrJoin('class',heading.category);\n\t\tif(heading.state === '+') {\n\t\t\ttoken.attrSet('open','open');\n\t\t}\n\n\t\t// admonition title\n\t\ttoken = state.push('admonition_title_open',titleTag,1);\n\t\ttoken.markup = markup;\n\t\ttoken.info   = heading.category;\n\t\ttoken.map    = [ startLine, startLine + 1 ];\n\t\ttoken.attrSet('class','admonition-title');\n\n\t\ttoken = state.push('inline','',0);\n\t\ttoken.content  = heading.title;\n\t\ttoken.map      = [ startLine, startLine + 1 ];\n\t\ttoken.children = [];\n\n\t\ttoken = state.push('admonition_title_close',titleTag,-1);\n\t\ttoken.markup = markup;\n\t\ttoken.info   = heading.category;\n\n\t\ttoken = state.push('admonition_body_open','div',1);\n\t\ttoken.attrSet('class','admonition-body');\n\t\ttoken.map = [ startLine + 1, loop.endLine - (loop.endMarker ? 1 : 0) ];\n\n\t\t// this will prevent lazy continuations from ever going past our end marker\n\t\tstate.lineMax = token.map[1];\n\t\tstate.md.block.tokenize(state,token.map[0],token.map[1]);\n\n\t\ttoken  = state.push('admonition_body_close','div',-1);\n\t\ttoken  = state.push('admonition_close',blockTag,-1);\n\t\ttoken.markup = loop.endMarker;\n\t\ttoken.block  = true;\n\n\t\tstate.parentType = oldParent;\n\t\tstate.lineMax = oldLineMax;\n\t\tstate.line = loop.endLine;\n\n\t\treturn true;\n\t}\n\n\t//var defaults = { marker: \":\" };\n\n\toptions = options || {};\n\n\tAdmMarkerCode = (options.maker || \":\").charCodeAt(0);\n\n\t//options = md.utils.assign({},defaults,options);\n\t//options.markerCode = options.marker.charCodeAt(0);\n\n\tmd.block.ruler.before('fence','admonition',admonitionRule,{\n\t\talt: [ 'paragraph', 'reference', 'blockquote', 'list' ]\n\t});\n};\n})();","type":"application/javascript","module-type":"library"},"$:/plugins/cdr/markdown-more/markdown-it-checklist.js":{"title":"$:/plugins/cdr/markdown-more/markdown-it-checklist.js","text":"/*\\\ntitle: $:/plugins/cdr/markdown-more/markdown-it-checklist.js\ntype: application/javascript\nmodule-type: library\n\nAdds checklist syntax:\n\n```\n- [ ] task 1\n- [x] task 2\n```\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar CheckBoxRegEx = /^\\[([xX ])\\]\\s+/g;\n\n// token[idx] is the first inline token of a list item\nfunction processListItemStart(state,tokens,idx) {\n\tvar tok = tokens[idx]; // inline token\n\tvar blockState = state.md.blockState;\n\n\tif(tok.children.length <= 0) { return; }\n\n\tvar text = tok.children[0].content;\n\n\tCheckBoxRegEx.lastIndex = 0;\n\tvar match = CheckBoxRegEx.exec(text);\n\n\tif(match) {\n\t\tvar checked = false;\n\t\tif(match[1] === \" \") {\n\t\t\ttokens[idx - 2].attrSet(\"class\",\"checklist-item unchecked\");\n\t\t} else {\n\t\t\ttokens[idx - 2].attrSet(\"class\",\"checklist-item checked\");\n\t\t\tchecked = true;\n\t\t}\n\t\ttok.children[0].content = text.substring(CheckBoxRegEx.lastIndex);\n\t\tvar inputToken = new state.Token('checkbox','$md-checkbox',0);\n\t\tinputToken.attrSet(\"class\",\"checklist-item-checkbox\");\n\t\tinputToken.attrSet(\"type\",\"checkbox\");\n\t\tinputToken.attrSet(\"pos\",blockState.bMarks[tokens[idx].map[0]]);\n\t\tif(checked) {\n\t\t\tinputToken.attrSet(\"checked\",\"\");\n\t\t}\n\t\ttok.children.unshift(inputToken);\n\t}\n}\n\nfunction isListItemStart(tokens,idx) {\n\treturn tokens[idx].type === \"inline\" &&\n\t\ttokens[idx - 1].type == \"paragraph_open\" &&\n\t\ttokens[idx - 2].type === \"list_item_open\";\n}\n\nfunction processLists(state) {\n\tvar tokens = state.tokens;\n\n\tfor(var idx = 2; idx < tokens.length; idx++) {\n\t\tif(isListItemStart(tokens,idx)) {\n\t\t\tprocessListItemStart(state,tokens,idx);\n\t\t}\n\t}\n\tdelete state.md.blockState;\n}\n\nfunction checklistPlugin(md,options) {\n\tmd.core.ruler.after('inline','checklist',processLists,options);\n\n\t// insert a dummy rule in order to preserve block processing's state object\n\tmd.block.ruler.before('table','_dummy_',function(state,startLine,endLine,silent) {\n\t\tstate.md.blockState = state;\n\t\treturn false;\n\t});\n}\n\nmodule.exports = checklistPlugin;\n})();","type":"application/javascript","module-type":"library"},"$:/plugins/cdr/markdown-more/markdown-it-toc.js":{"title":"$:/plugins/cdr/markdown-more/markdown-it-toc.js","text":"/*\\\ntitle: $:/plugins/cdr/markdown-more/markdown-it-toc.js\ntype: application/javascript\nmodule-type: library\n\nAdds a table of content section\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar escapeHtml;\n\n// TOC tree node: { level: n, text: s, id: n, children:[] }\nfunction tocScan(state,maxDepth) {\n\tvar root = { level: 0, text: '', id: null, children: [] };\n\tvar stack = [ root ];\n\n\tvar id = 0, i, level, token, curDepth = 0, curLevel = 0;\n\tfor(i=0; i < state.tokens.length; i++) {\n\t\tif(state.tokens[i].level > 0) { continue; }\n\t\tif(state.tokens[i].type !== 'heading_open') { continue; }\n\n\t\ttoken = state.tokens[i];\n\t\tlevel = parseInt(token.tag.substring(1));\n\n\t\tif(level > 3) { continue; }\n\n\t\tif(level > curLevel) {\n\t\t\tif(curDepth >= maxDepth) { continue; }\n\t\t\tif(curLevel > 0 && level > curLevel + 1) { continue;}\n\t\t}\n\n\t\tif(state.tokens[i + 1].type !== 'inline') { continue; }\n\n\t\tvar inlineTokens = state.tokens[i+1].children.filter(function(token) {\n\t\t\treturn !['link_open','link_close','html_inline'].includes(token.type);\n\t\t});\n\t\tvar headingText = state.md.renderer.renderInline(inlineTokens,state.md.options);\n\t\tvar node = { level: level, text: headingText, id: id++, children: [] };\n\n\t\t// search level's parent\n\t\twhile(curDepth > 0 && level <= stack[stack.length - 1].level) {\n\t\t\tstack.pop();\n\t\t\tcurDepth--;\n\t\t}\n\t\tstack[stack.length - 1].children.push(node);\n\t\tstack.push(node);\n\t\tcurDepth++;\n\t\ttoken.anchor = '#topic' + node.id;\n\t\ttoken.attrJoin('class','anchor-item');\n\t\tcurLevel = level;\n\t}\n\tif(root.children.length > 0) {\n\t\tstate.env.toc = root;\n\t}\n}\n\nfunction tocRenderTree(nodes, depth) {\n\tif(!nodes || nodes.length <= 0) {\n\t\treturn '';\n\t}\n\tvar s = (depth > 1 ? '\\n' : '') + '<ol class=\"tc-toc toc-level' + depth + '\">\\n';\n\tvar i;\n\tfor(i=0; i < nodes.length; i++) {\n\t\ts += '<li class=\"toc-item\"><a class=\"tc-tiddlylink\" href=<<qualify \"##topic' + nodes[i].id\n\t\t\t+ '\">>><span>' + nodes[i].text + '</span></a>'\n\t\t\t+ tocRenderTree(nodes[i].children, depth + 1)\n\t\t\t+ '</li>\\n';\n\t}\n\treturn s + '</ol>\\n';\n}\n\nfunction tocRender(tokens,idx,options,env) {\n\tif(!env.toc || env.toc.children.length === 0) {\n\t\treturn '';\n\t}\n\n\treturn '<div class=\"md-aside\">\\n<nav class=\"table-of-contents\">\\n'\n\t\t+ tocRenderTree(env.toc.children, 1)\n\t\t+ '</nav>\\n</div>\\n';\n}\n\nmodule.exports = function tocPlugin(md,options) {\n\toptions = md.utils.assign(Object.create(null),{\n\t\tdepth: 3\n\t}, options);\n\n\tescapeHtml = md.utils.escapeHtml;\n\n\t// insert 'toc' token automatically and enclose markdown\n\t// text into a <div> container\n\tmd.core.ruler.before('block','prologue',function(state) {\n\t\tvar token;\n\t\ttoken = new state.Token('html_block','',0);\n\t\ttoken.content = '<div class=\"md-container\">\\n';\n\t\tstate.tokens.push(token);\n\n\t\ttoken = new state.Token('toc','nav',0);\n\t\ttoken.block = true;\n\t\tstate.tokens.push(token);\n\n\t\ttoken = new state.Token('html_block','',0);\n\t\ttoken.content = '<div class=\"md-main\">\\n';\n\t\tstate.tokens.push(token);\n\t});\n\n\t// close off main <div> container and starts scanning\n\t// for toc content\n\tmd.core.ruler.push('epilogue', function(state) {\n\t\tvar token = new state.Token('html_block','',0);\n\t\ttoken.content = '</div>\\n</div>\\n';\n\t\tstate.tokens.push(token);\n\n\t\ttocScan(state,options.depth);\n\t});\n\n\tmd.renderer.rules.toc = tocRender;\n\n\t// adds anchor id to heading elements if available\n\tmd.renderer.rules.heading_open = function(tokens,idx,options,env,slf) {\n\t\tvar s = '<' + tokens[idx].tag + slf.renderAttrs(tokens[idx]);\n\n\t\tif(tokens[idx].anchor) {\n\t\t\ts += ' id=<<qualify \"' + tokens[idx].anchor + '\">>';\n\t\t}\n\t\treturn s + '>';\n\t}\n}\n})();","type":"application/javascript","module-type":"library"},"$:/plugins/cdr/markdown-more/md-checkbox.js":{"title":"$:/plugins/cdr/markdown-more/md-checkbox.js","text":"/*\\\ntitle: $:/plugins/cdr/markdown-more/md-checkbox.js\ntype: application/javascript\nmodule-type: widget\n\nInteractive checkbox for markdown checklists. Internal use only.\n\\*/\n\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar Widget = require(\"$:/core/modules/widgets/widget.js\").widget;\n\nvar MarkdownCheckboxWidget = function(parseTreeNode,options) {\n\tthis.initialise(parseTreeNode,options);\n};\n\n/*\nInherit from the base widget class\n*/\nMarkdownCheckboxWidget.prototype = new Widget();\n\n/*\nRender this widget into the DOM\n*/\nMarkdownCheckboxWidget.prototype.render = function(parent,nextSibling) {\n\tthis.parentDomNode = parent;\n\tthis.computeAttributes();\n\tthis.execute();\n\n\t// create our element\n\tthis.inputNode = this.document.createElement(\"input\");\n\tthis.inputNode.setAttribute(\"type\",\"checkbox\");\n\n\tif(this.isChecked) {\n\t\tthis.inputNode.setAttribute(\"class\",\"checklist-item-checkbox checked\");\n\t\tthis.inputNode.setAttribute(\"checked\",\"\");\n\t} else {\n\t\tthis.inputNode.setAttribute(\"class\",\"checklist-item-checkbox unchecked\");\n\t}\n\tif(this.isDisabled) {\n\t\tthis.inputNode.setAttribute(\"disabled\",\"\");\n\t} else {\n\t\t// add event handler\n\t\t$tw.utils.addEventListeners(this.inputNode,[\n\t\t\t{\n\t\t\t\tname: \"change\",\n\t\t\t\thandlerObject: this,\n\t\t\t\thandlerMethod: \"handleChangeEvent\"\n\t\t\t}\n\t\t]);\n\t}\n\n\t// insert into the DOM\n\tparent.insertBefore(this.inputNode,nextSibling);\n\tthis.domNodes.push(this.inputNode);\n};\n\n/*\nMake a best effort to determine if the title of the storyTiddler matches that of\nthe transcluded tiddler. This function may provide inaccurate result if\nthe relevant titles contain the \"|\" character. But TW has a\nTitle/BadCharacterWarning that reduces the scenario.\n*/\nfunction matchTranscludeTitle(storyTiddlerTitle) {\n\tvar curTiddlerTitle = this.getVariable(\"currentTiddler\"),\n\t\ttransclusion = this.getVariable(\"transclusion\");\n\n\tif(transclusion === undefined) {return true;}\n\n\tif(transclusion.indexOf(curTiddlerTitle + \"|\") === 1) {\n\t\tvar pos = 2 + curTiddlerTitle.length;\n\t\treturn (transclusion.indexOf(storyTiddlerTitle + \"|\",pos) === pos);\n\t}\n\treturn false;\n}\n\n/*\nCompute the internal state of the widget\n*/\nMarkdownCheckboxWidget.prototype.execute = function() {\n\tthis.tiddlerTitle = this.getVariable(\"storyTiddler\");\n\n\t// Get the parameters from the attributes\n\tthis.pos = parseInt(this.getAttribute(\"pos\"));\n\tif(! isNaN(this.pos) && this.pos < 0) {\n\t\tthis.pos = NaN;\n\t}\n\n\tthis.isChecked = this.getAttribute(\"checked\") !== undefined;\n\tthis.isDisabled = (this.getAttribute(\"disabled\") !== undefined)\n\t\t|| isNaN(this.pos)\n\t\t|| ! $tw.wiki.getTiddler(this.tiddlerTitle);\n\n\tif(!matchTranscludeTitle.call(this,this.tiddlerTitle)) {\n\t\tthis.isDisabled = true;\n\t}\n};\n\n/*\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\n*/\nMarkdownCheckboxWidget.prototype.refresh = function(changedTiddlers) {\n\tvar changedAttributes = this.computeAttributes();\n\tif(changedAttributes.pos || changedAttributes.checked || changedAttributes.disabled) {\n\t\tthis.refreshSelf();\n\t\treturn true;\n\t}\n\treturn false;\n};\n\nMarkdownCheckboxWidget.prototype.handleChangeEvent = function(event) {\n\tvar newText, text = $tw.wiki.getTiddlerText(this.tiddlerTitle);\n\n\tif(text.length <= this.pos) {\n\t\treturn;\n\t}\n\tif(this.inputNode.checked) {\n\t\tnewText = text.substring(0,this.pos) + text.substring(this.pos).replace(/\\[ \\]/,\"[x]\");\n\t\t$tw.utils.addClass(this.inputNode,\"checked\");\n\t\t$tw.utils.removeClass(this.inputNode,\"unchecked\");\n\t} else {\n\t\tnewText = text.substring(0,this.pos) + text.substring(this.pos).replace(/\\[[xX]\\]/,\"[ ]\");\n\t\t$tw.utils.addClass(this.inputNode,\"unchecked\");\n\t\t$tw.utils.removeClass(this.inputNode,\"checked\");\n\t}\n\t$tw.wiki.setText(this.tiddlerTitle,\"text\",null,newText);\n\t// Trigger an autosave\n\t$tw.rootWidget.dispatchEvent({type: \"tm-auto-save-wiki\"});\n}\n\nexports[\"md-checkbox\"] = MarkdownCheckboxWidget;\n\n})();\n","type":"application/javascript","module-type":"widget"},"$:/plugins/cdr/markdown-more/readme":{"title":"$:/plugins/cdr/markdown-more/readme","text":"This is an extension to the official Markdown plugin (&ge; 5.2.6), featuring:\n\n* checklist\n* admonition\n* tiddler-level table of contents based on Markdown headings\n\n!! Settings\n\n!!! Admonition Style\n\n<$select tiddler=\"$:/config/markdown/admonition/style\" default='classic'><$list filter='[[classic]] [[pastel]]'><option value=<<currentTiddler>>><$view field='title'/></option></$list></$select>\n\n<div class=\"markdown\">\n<div class=\"admonition note\" style=\"margin-top: 1.2em\">\n<div class=\"admonition-title\">NOTE</div>\n<div class=\"admonition-body\">This is an example of an admonition box.</div>\n</div>\n</div>\n\n!!! Table of Contents\n\n<$checkbox tiddler=\"$:/config/markdown/toc/enable\" field=\"text\" checked=\"yes\" unchecked=\"no\" default=\"yes\">\n&#32; generate table of contents &mdash; //page reload required for changes to take effect//\n</$checkbox>\n\n<$reveal stateTitle=\"$:/config/markdown/toc/enable\" type=\"match\" text=\"yes\" default=\"yes\">\n\n<$checkbox tiddler=\"$:/config/markdown/toc/portrait\" field=\"text\" checked=\"hide\" unchecked=\"show\" default=\"hide\">\n&#32; hide table of contents in portrait/mobile view\n</$checkbox>\n\nnumber of levels:&nbsp;&nbsp;<$select tiddler=\"$:/config/markdown/toc/depth\" default='2'><$list filter='1 2 3'><option value=<<currentTiddler>>><$view field='title'/></option></$list></$select>\n</$reveal>"},"$:/plugins/cdr/markdown-more/startup.js":{"title":"$:/plugins/cdr/markdown-more/startup.js","text":"/*\\\ntitle: $:/plugins/cdr/markdown-more/startup.js\ntype: application/javascript\nmodule-type: startup\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n// Export name and synchronous status\nexports.name = \"markdown-more\";\nexports.after = [\"startup\"];\nexports.before = [\"render\"];\nexports.synchronous = true;\n\nexports.startup = function() {\n\tvar MarkdownParser = $tw.Wiki.parsers[\"text/markdown\"];\n\n\tif(!MarkdownParser) { return; }\n\n\tvar md = MarkdownParser.prototype.md;\n\tmd.use(require(\"$:/plugins/cdr/markdown-more/markdown-it-checklist.js\"))\n\t  .use(require(\"$:/plugins/cdr/markdown-more/markdown-it-admonition\"))\n\t  //.use(require(\"$:/plugins/cdr/markdown-more/markdown-it-toc-done-right\"), {placeholder: \"\\\\${toc}\"})\n\t  //.use(require(\"$:/plugins/cdr/markdown-more/markdown-it-table-of-contents\"))\n\t  ;\n\n\tif($tw.wiki.getTiddlerText(\"$:/config/markdown/toc/enable\",\"no\").trim().toLowerCase() === \"yes\") {\n\t  md.use(require(\"$:/plugins/cdr/markdown-more/markdown-it-toc\"));\n\t}\n}\n})();\n","type":"application/javascript","module-type":"startup"},"$:/plugins/cdr/markdown-more/styles":{"title":"$:/plugins/cdr/markdown-more/styles","tags":"[[$:/tags/Stylesheet]]","text":"\\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline html\n\n\\define styleAdmonition(category: \"note\", color: \"note\", symbol: \"e85d\")\n\\rules except dash\n.admonition.$category$ {\n  border-left: 3px solid hsl(var(--color-admonition-$color$));\n}\n.admonition.$category$ > .admonition-title {\n  background-color: hsl(var(--color-admonition-$color$-bg));\n  color: hsl(var(--color-admonition-$color$-tx));\n}\n.admonition.$category$ > .admonition-title:before {\n  color: hsl(var(--color-admonition-$color$));\n  content: \"\\$symbol$\";\n}\ndetails.admonition.$category$ > .admonition-title:after {\n  background-color: hsl(var(--color-admonition-$color$));\n}\n\\end\n\n\\define styleAdmonitionCompact(category: \"note\", color: \"note\")\n\\rules except dash\n.admonition.$category$ {\n  background-color: hsl(var(--color-admonition-$color$-bg));\n  border: 1px solid hsl(var(--color-admonition-$color$));\n  color: hsl(var(--color-admonition-$color$-tx));\n}\n.admonition.$category$ a.tc-tiddlylink-external, .admonition.$category$ a.tc-tiddlylink-external:visited,\n.admonition.$category$ a.tc-tiddlylink, .admonition.$category$ a.tc-tiddlylink:visited {\n  color: hsl(var(--color-admonition-$color$-tx));\n  text-decoration-line: underline;\n  text-underline-offset: 2px;\n}\n.admonition.$category$ :not(pre) > code {\n  background-color: hsla(var(--color-admonition-$color$-bg));\n  background-color: rgba(0,0,0,.03);\n  color: hsl(var(--color-admonition-$color$-tx));\n  border: .5px solid hsla(var(--color-admonition-$color$), .5);\n  border-radius: 3px;\n  margin: 0 2px;\n}\n\\end\n\n@font-face {\n  font-family: 'Material Icons';\n  font-weight: normal;\n  font-style: normal;\n  src: local(\"Material Icons\"),  local(\"MaterialIcons-Regular\"), url(data:font/woff2;base64,d09GMgABAAAAAAWgAA8AAAAAC3wAAAVKAAEEWgAAAAAAAAAAAAAAAAAAAAAAAAAAGhYbEBwaBmAAgUwIBBEICo0MiW4BNgIkAy4LLgAEIAWCegcgG6cIo6KEUQIA/plgE5n6ghXD6FIH3i2DlCyKBSxseTL87nyxmQANgU8vBB9w795da03NsrjwUwRTMcIosbgj3PTqdA41S5nmviYCqbiPTD3MxGDqwJRO1Hiedr5+OUbYjXgAGPh49w/X9K5Vu/t3Q+EKar7gpiYDI35jE5vYloV5ELYgDOE21/85lnqdlEUHfnaisQ3w3/W/TFpRZOHhEc46vUGaZ8O9CYz2HLWDM7C2Fb+XeC0E0gDARIp2GZI5cjZObM8qUxrnvbkWeMTp4aCXDrSxFICTrf4xM7bHIhNwlGf9upofTwTYxpd2+kgSQ4hligqE2t7/kSWKtuTVfPDh4X4U/CjsUdLj509Mnp57Fv5sxwv3Fzkvyl+0vpjwYvqL6x/7fzzRgno7bmEb+WdUtN5ndcLqmNVeS8rio3mQ2SmzYpObJttN1posMJlkMsYkaKBu9gwaxtTCCANAbcPCKhi7BhyAPko8Jxuwx4aYRJmjivhlPBIDUIdJGIY6VEz2CxPivWKxfHhQzIY7HB+paJ68qXBVp/ZRA3muNxadZJ4jHI1q+EQCiQTi8f7fb8HcgmkQuRbiDO098udykZAFJUpalaV+DCEADOFNTz36xMQutf82dTvpUxMyCBp9Ir80C/o1+7EdYVjwtnA0Q2Ygt7JrKD2ykHeH9O+HZuBGduvXduUWZu+3crNxO7X/VLokVEGKopZ/GTRjgn3kHBmb/XFUl4Q//RSEe1HgUsxna3EU63oPcmHUt1dv7N81TNO3ra4tcT+LJq5OqLcGagK2hGBON4snblYi5BbiJUR7ccV+uVautv1ZvVhJrrQuClWOMuwjC7zL5tNCDG53WSBBD4HdhGLB430ZCAFKIIyQfRvRtohcA4ZpMoOJY0JgKBJkRJemUeBiiEk49BnmbXoX5ENByFoTETAM9KZQEf80Op0PMFQwyNAigkQZ+IqTh8AxRTfDBMT+c9Y/dGJw7PXvhJrI34g18sMKKsC1znXUhg1wHEHCIhMlrW1u5sLZRyAwt7W01XlBjdMbkKPFQayAb/Y1IsD1obLSrje9146hGYtSj1ILhq6Q4EbUcPSTTP5Y4BQq8QZG+l8eBE8D3cRSZjA2/Z25xYWlkjSLSLgDTjNU7owT66iNrtWB27u7aSwoZAwwZUMmjJ+cOAQUnEzWu2JFbKyalgkmCpCbBk7GX8DHNI3zklAZSFREKUIVSsVkLmlCwSHBYawl6bvkzjIKv+P3QsD/RBGxCBlUbkB7K54RIcRIz8qe+PVbebOyX4XEyXoE3p2h34t6ofrtI+tHb9VC9hbI1jx8pP7f1tZLEDTQ1XIwP4I/GPkLhPjdiwsn2/ZF28mmMxExpKLJrxgGEiT0RhbZkN43EXEMMpsIQ1h9C+VGVCGIAquMeRf0IXGBt7N/y3mVwFLOByKRhomkLAG+3BI4GR7PJfkiBKQrVUQllrDIgqJSTuQsbp8riYlVX8zIeNsuzIqJcaIgnl9AK3gK3XvMG+j34+kbgM/qFZ4A8B1mCf//9Q94AnFeGUB0BQPUQcRYBQqMVEl05zIhjXQQSghCjVg0ArawStBUDVAdFKaProKm9MhhbExAi1bCl16BQdryDZZ1M4RcTF4drjNENN37LFFL34SqU69DowplyjWjuHDizAslUp06ZaqVsEOJVquIA0qwatUoKWujTREssUGXG7UyFld3xCvQHK1WKFjVN1qROrXkpXKZloyuQKOIaLMNWC1Tsht0YCHFZ7FPC1QNdWfPlX0PVW/MCmxibyVA1PmJdZ150mxaz35nWS3C2X8MFwAA);\n}\n\n/*** Admonition ***/\n\n:root {\n  /* HSL color tuples */\n  --color-admonition-note: 202, 100%, 49%;\n  --color-admonition-important: 330, 75%, 61%;\n  --color-admonition-success: 95, 70%, 47%;\n  --color-admonition-warning: 34, 100%, 50%;\n  --color-admonition-danger: 6, 86%, 57%;\n  --color-admonition-example: 265, 100%, 67%;\n  --color-admonition-quote: 0, 0%, 56%;\n  --color-admonition-see-also: 134, 55%, 47%;\n}\n\n<$reveal stateTitle={{$:/palette}} stateField=\"color-scheme\" type=\"nomatch\" text=\"dark\">\n:root {\n  --color-admonition-note-bg: 202, 100%, 93%;\n  --color-admonition-important-bg: 330, 75%, 95%;\n  --color-admonition-success-bg: 95, 71%, 90%;\n  --color-admonition-warning-bg: 34, 100%, 92%;\n  --color-admonition-danger-bg: 6, 86%, 95%;\n  --color-admonition-example-bg: 265, 100%, 96%;\n  --color-admonition-quote-bg: 0, 0%, 93%;\n  --color-admonition-see-also-bg: 134, 55%, 93%;\n\n  --color-admonition-note-tx: 202, 100%, 20%;\n  --color-admonition-important-tx: 330, 75%, 31%;\n  --color-admonition-success-tx: 95, 70%, 19%;\n  --color-admonition-warning-tx: 34, 100%, 21%;\n  --color-admonition-danger-tx: 6, 86%, 30%;\n  --color-admonition-example-tx: 265, 100%, 40.5%;\n  --color-admonition-quote-tx: 0, 0%, 25.5%;\n  --color-admonition-see-also-tx: 134, 55%, 21%;\n}\n.admonition {\n  background-color: rgba(255,255,255,0.05);\n}\n</$reveal>\n\n<$reveal stateTitle={{$:/palette}} stateField=\"color-scheme\" type=\"match\" text=\"dark\">\n:root {\n  --color-admonition-note-bg: 202, 100%, 15%;\n  --color-admonition-important-bg: 330, 75%, 17%;\n  --color-admonition-success-bg: 95, 70%, 14%;\n  --color-admonition-warning-bg: 34, 100%, 16%;\n  --color-admonition-danger-bg: 6, 86%, 16%;\n  --color-admonition-example-bg: 265, 100%, 17%;\n  --color-admonition-quote-bg: 0, 0%, 19.5%;\n  --color-admonition-see-also-bg: 134, 55%, 14%;\n\n  --color-admonition-note-tx: 202, 100%, 61%;\n  --color-admonition-important-tx: 330, 75%, 68%;\n  --color-admonition-success-tx: 95, 70%, 44%;\n  --color-admonition-warning-tx: 34, 100%, 52%;\n  --color-admonition-danger-tx: 6, 86%, 68%;\n  --color-admonition-example-tx: 265, 100%, 76%;\n  --color-admonition-quote-tx: 0, 0%, 67%;\n  --color-admonition-see-also-tx: 134, 55%, 46%;\n}\n.admonition {\n  background-color: rgba(255,255,255,0.06);\n  border: 1px solid rgba(255,255,255,0.07);\n}\n@media print {\n  .admonition {\n    border: 1px solid <<colour pre-border>>;\n  }\n}\n</$reveal>\n\n<$reveal stateTitle={{$:/palette}} stateField=\"color-scheme\" type=\"nomatch\" text=\"dark\">\n@media print {\n  .admonition {\n    border: 1px solid <<colour pre-border>>;\n    print-color-adjust: exact;\n    -webkit-print-color-adjust: exact;\n  }\n  .admonition > .admonition-title {\n    print-color-adjust: exact;\n    -webkit-print-color-adjust: exact;\n  }\n}\n@media screen {\n  .admonition {\n    box-shadow: 0 3px 8px rgba(0,0,0,.05), 0 0 1px rgba(0,0,0,.1);\n  }\n}\n</$reveal>\n\n.admonition {\n  margin: 1.5em 0;\n  padding: 0px;\n  overflow:auto;\n  page-break-inside:avoid;\n  border-radius: 3px;\n  border-left: 3px solid hsl(var(--color-admonition-note));\n}\n.admonition >.admonition-title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 7px 8px;\n  background-color: hsl(var(--color-admonition-note));\n  font-weight: 600;\n  font-size: .92em;\n  line-height: 1;\n}\n.admonition >.admonition-title:before {\n  margin-right: .4em;\n  font-size: 1.25em;\n  color: rgba(68, 138, 255, .8);\n  content: \"\\e88e\";\n}\n.admonition >.admonition-title:before {\n  font-family: Material Icons;\n  font-style: normal;\n  font-variant: normal;\n  font-weight: 400;\n  text-transform: none;\n  white-space: nowrap;\n  word-wrap: normal;\n  direction: ltr;\n}\ndetails.admonition > .admonition-title:after {\n  content: \"\";\n  background-color: hsl(var(--color-admonition-note));\n  margin-left: auto;\n  mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='48' width='48'%3E%3Cpath d='m18.75 36-2.15-2.15 9.9-9.9-9.9-9.9 2.15-2.15L30.8 23.95Z'/%3E%3C/svg%3E\");\n  mask-position: center;\n  mask-repeat: no-repeat;\n  mask-size: contain;\n  -webkit-mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='48' width='48'%3E%3Cpath d='m18.75 36-2.15-2.15 9.9-9.9-9.9-9.9 2.15-2.15L30.8 23.95Z'/%3E%3C/svg%3E\");\n  -webkit-mask-position: center;\n  -webkit-mask-repeat: no-repeat;\n  -webkit-mask-size: contain;\n  transform: rotate(0deg);\n  transition: transform .25s;\n  height: 1.5em;\n  width: 1.5em;\n}\ndetails[open].admonition > .admonition-title:after {\n  transform: rotate(90deg);\n}\n.admonition > .admonition-body {\n  font-size: .98em;\n  margin: 8px 10px;\n}\n.admonition p {\n  line-height: 1.35;\n}\n\n<<styleAdmonition note note e85d>>\n\n<<styleAdmonition info note e88e>>\n\n<<styleAdmonition todo note e834>>\n\n<<styleAdmonition see-also see-also e250>>\n\n<<styleAdmonition important important e645>>\n\n<<styleAdmonition success success e876>>\n\n<<styleAdmonition tip success e0f0>>\n\n<<styleAdmonition question success e887>>\n\n<<styleAdmonition warning warning e002>>\n\n<<styleAdmonition caution warning e002>>\n\n<<styleAdmonition danger danger e3e7>>\n\n<<styleAdmonition fail danger e14c>>\n\n<<styleAdmonition error danger e5c9>>\n\n<<styleAdmonition bug danger e868>>\n\n<<styleAdmonition example example f1c3>>\n\n<<styleAdmonition snippet example f1c3>>\n\n<<styleAdmonition summary example e241>>\n\n<<styleAdmonition abstract example e8d2>>\n\n<<styleAdmonition quote quote e244>>\n\n<<styleAdmonition cite quote e244>>\n\n<$reveal stateTitle=\"$:/config/markdown/admonition/style\" type=\"match\" text=\"pastel\" default=\"classic\">\n.admonition > .admonition-title {\n  background-color: rgba(0,0,0,0) !important;\n  padding-top: .5em;\n  padding-bottom: 0px;\n  margin-bottom: .5em;\n  font-size: .9em;\n  border: none;\n}\n.admonition > .admonition-body {\n  font-size: .96em;\n}\n\n<<styleAdmonitionCompact \"note\" \"note\">>\n\n<<styleAdmonitionCompact info note>>\n\n<<styleAdmonitionCompact todo note>>\n\n<<styleAdmonitionCompact see-also see-also>>\n\n<<styleAdmonitionCompact important important>>\n\n<<styleAdmonitionCompact success success>>\n\n<<styleAdmonitionCompact tip success>>\n\n<<styleAdmonitionCompact question success>>\n\n<<styleAdmonitionCompact warning warning>>\n\n<<styleAdmonitionCompact caution warning>>\n\n<<styleAdmonitionCompact danger danger>>\n\n<<styleAdmonitionCompact fail danger>>\n\n<<styleAdmonitionCompact error danger>>\n\n<<styleAdmonitionCompact bug danger>>\n\n<<styleAdmonitionCompact example example>>\n\n<<styleAdmonitionCompact snippet example>>\n\n<<styleAdmonitionCompact summary example>>\n\n<<styleAdmonitionCompact abstract example>>\n\n<<styleAdmonitionCompact quote quote>>\n\n<<styleAdmonitionCompact cite quote>>\n</$reveal>\n\n/*** Checklist ***/\n\n.markdown .checklist-item {\n  list-style-type: none;\n}\n.markdown .checklist-item-checkbox {\n  margin: 0 .3em .25em -1.2em;\n  vertical-align: middle;\n  cursor: pointer;\n}\n\n/*** TOC ***/\n\nh1 img, h2 img, h3 img, h4 img, h5 img, h6 img, .toc-item img {\n  width: 1.2em;\n  height: 1.2em;\n}\ndiv.md-container {\n  width: 100%;\n  display: block\n}\ndiv.md-aside {\n  font-size: 0.9em;\n}\n\n/* LANDSCAPE */\n@media (min-width: {{$:/themes/tiddlywiki/vanilla/metrics/sidebarbreakpoint}}) {\n  div.md-container {\n    display: flex;\n    flex-flow: row no-wrap;\n  }\n  div.md-main {\n    flex-grow: 1;\n    flex-basis: 0;\n    flex-shrink: 1;\n    width: 78%;\n    order: 1;\n  }\n  div.md-aside {\n    flex-grow: 0;\n    flex-shrink: 1;\n    width: 22%;\n    order: 2;\n  }\n  .md-aside nav {\n    position: sticky;\n    top: {{{ [{$:/themes/tiddlywiki/vanilla/options/stickytitles}match[yes]then[110px]else[60px]] }}};\n    max-height: calc(100vh - {{{ [{$:/themes/tiddlywiki/vanilla/options/stickytitles}match[yes]then[110px]else[60px]] }}});\n    overflow-y: auto;\n    margin-left: 1em;\n  }\n}\n\n<$reveal stateTitle=\"$:/config/markdown/toc/portrait\" type=\"match\" text=\"hide\">\n@media (max-width: {{$:/themes/tiddlywiki/vanilla/metrics/sidebarbreakpoint}}) {\n    .md-aside {\n    display: none;\n  }\n}\n</$reveal>\n\n/* PRINT */\n@media print {\n  div.md-aside {\n    display: none;\n  }\n}\n\n/* TOC list style */\n.md-aside nav ol.tc-toc {\n  list-style-type: none;\n  padding-left: 1.25em;\n}\n.md-aside nav > ol.tc-toc {\n  padding-left: 0px;\n}\n.md-aside nav > ol > li:first-child {\n  margin-top: 0;\n}\n.md-aside .toc-item {\n  line-height: 1.2;\n  margin-bottom: .75em;\n  margin-top: .75em;\n}\n<$reveal stateTitle=\"$:/config/markdown/toc/depth\" type=\"match\" text=\"2\">\n.md-aside .toc-level3 {\n  display: none;\n}\n</$reveal>\n<$reveal stateTitle=\"$:/config/markdown/toc/depth\" type=\"match\" text=\"1\">\n.md-aside .toc-level2 {\n  display: none;\n}\n</$reveal>\n.markdown .anchor-item:target {\n  animation: highlight 2s ease;\n\tscroll-margin-top: {{{ [{$:/themes/tiddlywiki/vanilla/options/stickytitles}match[yes]then[120px]else[60px]] }}};\n}\n@keyframes highlight {\n  from { background: <<colour message-background>>; }\n  to { background: transparent; }\n}\n"},"$:/plugins/cdr/markdown-more/syntax":{"title":"$:/plugins/cdr/markdown-more/syntax","text":"!! Checklist\n\n```markdown\n- [ ] Task 1\n- [x] Task 2\n```\n\nThis plugin provides simple interactive checklists. Clicking on the checkboxes will alter the underlying Markdown text. To minimize unintended changes, transcluded checklists will be read-only. Care must also be taken when mixing <$text text=\"WikiText\"/> and the markdown text. For example, if you enter the following:\n\n```\n<$list filter=\"apple bat candle\" variable=\"item\">\n\n- [ ] <<item>>\n\n</$list>\n```\n\nAll of the rendered checkboxes in the above example will be linked to one toggle state. Clicking on any one of them will cause all of boxes to be updated.\n\n!! Admonitions\n\nCreate special content blocks with the admonition syntax:\n\n```markdown\n::::note Optional title can be specified after the category name\nInformation the user should notice.\n\n:::summary\nAdmonition blocks can be nested.\n:::\n\n::::\n```\n\nYou can create collapsible containers by appending `+` (to initially expand) or `-` after the category name.\n\n```\n:::note+\nCollapsible content\n:::\n```\n\nAvailable categories are:\n\n* note, info, todo\n* important\n* tip, success, question\n* warning, caution\n* fail, danger, error, bug\n* example, snippet, abstract, summary\n* quote, cite\n* see-also\n\n<div class=\"markdown\">\n<div class=\"admonition note\"><div class=\"admonition-title\">NOTE</div></div>\n<div class=\"admonition info\"><div class=\"admonition-title\">INFO</div></div>\n<div class=\"admonition todo\"><div class=\"admonition-title\">TODO</div></div>\n<div class=\"admonition important\"><div class=\"admonition-title\">IMPORTANT</div></div>\n<div class=\"admonition tip\"><div class=\"admonition-title\">TIP</div></div>\n<div class=\"admonition success\"><div class=\"admonition-title\">SUCCESS</div></div>\n<div class=\"admonition question\"><div class=\"admonition-title\">QUESTION</div></div>\n<div class=\"admonition warning\"><div class=\"admonition-title\">WARNING / CAUTION</div></div>\n<div class=\"admonition fail\"><div class=\"admonition-title\">FAIL</div></div>\n<div class=\"admonition danger\"><div class=\"admonition-title\">DANGER</div></div>\n<div class=\"admonition error\"><div class=\"admonition-title\">ERROR</div></div>\n<div class=\"admonition bug\"><div class=\"admonition-title\">BUG</div></div>\n<div class=\"admonition example\"><div class=\"admonition-title\">EXAMPLE / SNIPPET</div></div>\n<div class=\"admonition abstract\"><div class=\"admonition-title\">ABSTRACT</div></div>\n<div class=\"admonition summary\"><div class=\"admonition-title\">SUMMARY</div></div>\n<div class=\"admonition quote\"><div class=\"admonition-title\">QUOTE / CITE</div></div>\n<div class=\"admonition see-also\"><div class=\"admonition-title\">SEE ALSO</div></div>\n</div>"}}}